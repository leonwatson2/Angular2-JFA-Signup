{"version":3,"sources":["mock-backend.ts"],"names":[],"mappings":"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","file":"mock-backend.js","sourcesContent":["import {Request, Response, ResponseOptions, RequestMethod} from 'angular2/http';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {Observer} from 'rxjs/Observer';\r\n\r\nexport class MockBackend {\r\n    constructor() {\r\n    }\r\n\r\n    createConnection(request: Request) {\r\n        var response = new Observable((responseObserver: Observer<Response>) => {\r\n            var responseData;\r\n            var responseOptions;\r\n            switch (request.method) {\r\n                case RequestMethod.Get:\r\n                    if (request.url.split(\"/\").length == 1) {\r\n                       var req = request.url.split(\"/\")[0];\r\n                        if(req == \"users\"){\r\n                            var users;\r\n                                users = {users: this._users};\r\n                                responseOptions = new ResponseOptions({\r\n                                    body: JSON.parse(JSON.stringify(users)),\r\n                                    status: 200\r\n                            });\r\n                        }else if(req == \"interests\"){\r\n                            var interests = this._interests;\r\n                            responseOptions = new ResponseOptions({\r\n                                body: JSON.parse(JSON.stringify(interests)),\r\n                                status: 200\r\n                            });\r\n                        } else{\r\n                            responseOptions = new ResponseOptions({\r\n                                body: JSON.stringify({error: req + \":Not a valid query.\"}),\r\n                                status: 404\r\n                            });\r\n                            responseObserver.error(new Response(responseOptions));\r\n                        }\r\n                    } else {\r\n                        var req = request.url.split(\"/\")[1];\r\n                        var userNames;\r\n                        if(req == \"names\"){\r\n                            userNames = this._users.map(users =>  users.name)\r\n                        }\r\n                        responseOptions = new ResponseOptions({\r\n                            body: JSON.parse(JSON.stringify(userNames)),\r\n                            status: 200\r\n                        });\r\n                    }\r\n                    break;\r\n                case RequestMethod.Post:\r\n                    var user = JSON.parse(request.text().toString());\r\n                    user.id = this._getNewId();\r\n                    this._users.push(user);\r\n                    responseOptions = new ResponseOptions({ status: 201 });\r\n                    break;\r\n                case RequestMethod.Delete:\r\n                    var id = parseInt(request.url.split('/')[1]);\r\n                    this._deleteMediaItem(id);\r\n                    responseOptions = new ResponseOptions({ status: 200 });\r\n            }\r\n            \r\n            var responseObject = new Response(responseOptions);\r\n            responseObserver.next(responseObject);\r\n            responseObserver.complete();\r\n            return () => { };\r\n        });\r\n        return { response };\r\n    }\r\n    \r\n    _deleteMediaItem(id) {\r\n        var user = this._users.find(user => user.id === id);\r\n        var index = this._users.indexOf(user);\r\n        if (index >= 0) {\r\n            this._users.splice(index, 1);\r\n        }\r\n    }\r\n    \r\n    _getNewId() {\r\n        if (this._users.length > 0) {\r\n            return Math.max.apply(Math, this._users.map(mediaItem => mediaItem.id)) + 1;\r\n        }\r\n    }\r\n  _interests = [\r\n      \"Everything!\", \r\n      \"Hooping\", \r\n      \"Juggling\", \r\n      \"Poi\", \r\n      \"Flower Stick\" , \r\n      \"Kendama\", \r\n      \"Yo-yo\", \r\n      \"Levi wand\", \r\n      \"Unicycle\", \r\n      \"Contact Juggling\"];\r\n\r\n    _users = [\r\n  {\r\n    \"id\": 0,\r\n    \"name\": \"Silva Everett\",\r\n    \"email\": \"silvaeverett@liquidoc.com\",\r\n    \"birthdate\": \"1990-12-01\"\r\n  },\r\n  {\r\n    \"id\": 1,\r\n    \"name\": \"Dawson Mccray\",\r\n    \"email\": \"dawsonmccray@liquidoc.com\",\r\n    \"birthdate\": \"1994-47-06\"\r\n  },\r\n  {\r\n    \"id\": 2,\r\n    \"name\": \"Hendricks Hatfield\",\r\n    \"email\": \"hendrickshatfield@liquidoc.com\",\r\n    \"birthdate\": \"1997-45-14\"\r\n  },\r\n  {\r\n    \"id\": 3,\r\n    \"name\": \"Leann May\",\r\n    \"email\": \"leannmay@liquidoc.com\",\r\n    \"birthdate\": \"1998-30-12\"\r\n  },\r\n  {\r\n    \"id\": 4,\r\n    \"name\": \"Hancock Burnett\",\r\n    \"email\": \"hancockburnett@liquidoc.com\",\r\n    \"birthdate\": \"1991-18-07\"\r\n  },\r\n  {\r\n    \"id\": 5,\r\n    \"name\": \"Farrell Carroll\",\r\n    \"email\": \"farrellcarroll@liquidoc.com\",\r\n    \"birthdate\": \"1998-59-18\"\r\n  },\r\n  {\r\n    \"id\": 6,\r\n    \"name\": \"Sylvia Bradley\",\r\n    \"email\": \"sylviabradley@liquidoc.com\",\r\n    \"birthdate\": \"2000-29-12\"\r\n  },\r\n  {\r\n    \"id\": 7,\r\n    \"name\": \"Brewer Oliver\",\r\n    \"email\": \"breweroliver@liquidoc.com\",\r\n    \"birthdate\": \"1990-09-03\"\r\n  },\r\n  {\r\n    \"id\": 8,\r\n    \"name\": \"Greene Melendez\",\r\n    \"email\": \"greenemelendez@liquidoc.com\",\r\n    \"birthdate\": \"1994-36-28\"\r\n  },\r\n  {\r\n    \"id\": 9,\r\n    \"name\": \"Hughes Santiago\",\r\n    \"email\": \"hughessantiago@liquidoc.com\",\r\n    \"birthdate\": \"1990-25-28\"\r\n  }\r\n];\r\n}"],"sourceRoot":"/source/"}