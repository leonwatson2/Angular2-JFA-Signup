{"version":3,"sources":["users.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;YASA;gBAEC,sBAAoB,IAAS;oBAAT,SAAI,GAAJ,IAAI,CAAK;gBAAE,CAAC;gBAChC,+BAAQ,GAAR;oBACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,GAAG,CAAC,UAAA,GAAG;wBAC5C,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,OAAO,CAAC;oBAC3B,CAAC,CAAC,CAAC;gBACJ,CAAC;gBAED,mCAAY,GAAZ;oBACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,UAAA,GAAG;wBAC9C,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC;wBAClC,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC;oBAC7B,CAAC,CAAC,CAAC;gBACJ,CAAC;gBAED,+BAAQ,GAAR;oBACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,UAAA,GAAG;wBAC7C,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;oBACnB,CAAC,CAAC,CAAC;gBACJ,CAAC;gBAED,8BAAO,GAAP,UAAQ,OAAO;oBACd,EAAE,CAAA,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAA,CAAC;wBAC5B,MAAM,CAAC;oBACR,CAAC;oBACD,IAAI,OAAO,GAAG,IAAI,cAAO,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;oBAChE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;oBACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;yBAC1D,GAAG,CAAC,UAAA,GAAG;wBACP,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;wBACjB,MAAM,CAAC,GAAG,CAAC;oBACZ,CAAC,CAAC,CAAC,KAAK,CAAC,UAAA,GAAG;wBACJ,kDAAkD;wBAClD,MAAM,CAAC,eAAU,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC,CAAC;wBACpC,mDAAmD;wBACnD,oCAAoC;oBACtC,CAAC,CAAC,CAAC;oBAAA,CAAC;gBACf,CAAC;gBAxCF;oBAAC,iBAAU,EAAE;;gCAAA;gBAyCb,mBAAC;YAAD,CAvCA,AAuCC,IAAA;YAvCD,uCAuCC,CAAA","file":"users.service.js","sourcesContent":["import {Injectable} from 'angular2/core';\r\nimport {Http, Headers} from 'angular2/http';\r\nimport {Observable} from 'rxjs/Rx';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/catch';\r\n\r\n\r\n@Injectable()\r\n\r\nexport class UsersService{\r\n\r\n\tconstructor(private http:Http){}\r\n\tgetUsers(){\r\n\t\treturn this.http.get('./api/signups').map(res => {\r\n\t\t\treturn res.json().signups;\r\n\t\t});\r\n\t}\r\n\r\n\tgetInterests(){\r\n\t\treturn this.http.get('./api/interests').map(res => {\r\n\t\t\tconsole.log(res.json().interests);\r\n\t\t\treturn res.json().interests;\r\n\t\t});\r\n\t}\r\n\r\n\tgetNames(){\r\n\t\treturn this.http.get('./getUsers.php').map(res => {\r\n\t\t\treturn res.json();\r\n\t\t});\r\n\t}\r\n\r\n\taddUser(newUser){\r\n\t\tif(newUser.name.length == 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tvar headers = new Headers({'Content-Type': 'application/json'});\r\n\t\tconsole.log(newUser);\r\n\t\treturn this.http.post('./api/signups', JSON.stringify(newUser))\r\n\t\t\t\t\t\t.map(res => {\r\n\t\t\t\t\t\t\tconsole.log(res);\r\n\t\t\t\t\t\t\treturn res;\r\n\t\t\t\t\t\t}).catch(res => {\r\n\t\t\t\t          // The error callback (second parameter) is called\r\n\t\t\t\t          return Observable.throw(res.json());\r\n\t\t\t\t          // The success callback (first parameter) is called\r\n\t\t\t\t          // return Observable.of(res.json());\r\n\t\t\t\t        });;\r\n\t}\r\n}"],"sourceRoot":"/source/"}